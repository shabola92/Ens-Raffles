/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkdapp"] = self["webpackChunkdapp"] || []).push([["getHistory-mjs"],{

/***/ "?ed5d":
/*!************************!*\
  !*** buffer (ignored) ***!
  \************************/
/***/ (() => {

eval("/* (ignored) */\n\n//# sourceURL=webpack://dapp/buffer_(ignored)?");

/***/ }),

/***/ "./node_modules/@ensdomains/ensjs/dist/esm/functions/getHistory.mjs":
/*!**************************************************************************!*\
  !*** ./node_modules/@ensdomains/ensjs/dist/esm/functions/getHistory.mjs ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getHistory: () => (/* binding */ getHistory)\n/* harmony export */ });\n/* harmony import */ var _ensdomains_address_encoder__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ensdomains/address-encoder */ \"./node_modules/@ensdomains/address-encoder/lib/index.module.js\");\n/* harmony import */ var _ethersproject_bytes__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @ethersproject/bytes */ \"./node_modules/@ethersproject/bytes/lib.esm/index.js\");\n/* harmony import */ var _utils_contentHash_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/contentHash.mjs */ \"./node_modules/@ensdomains/ensjs/dist/esm/utils/contentHash.mjs\");\n/* harmony import */ var _utils_errors_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/errors.mjs */ \"./node_modules/@ensdomains/ensjs/dist/esm/utils/errors.mjs\");\n/* harmony import */ var _utils_normalise_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/normalise.mjs */ \"./node_modules/@ensdomains/ensjs/dist/esm/utils/normalise.mjs\");\n/* harmony import */ var _utils_validation_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/validation.mjs */ \"./node_modules/@ensdomains/ensjs/dist/esm/utils/validation.mjs\");\n/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")[\"Buffer\"];\n// src/functions/getHistory.ts\n\n\n\n\n\n\nvar eventFormat = {\n  Domain: {\n    NewOwner: (args) => ({ owner: args.owner.id }),\n    NewResolver: (args) => ({\n      resolver: args.resolver.id.split(\"-\")[0]\n    }),\n    Transfer: (args) => ({ owner: args.owner.id }),\n    NewTTL: (args) => ({ ttl: args.ttl }),\n    WrappedTransfer: (args) => ({ owner: args.owner.id }),\n    NameWrapped: (args) => ({\n      fuses: args.fuses,\n      owner: args.owner.id,\n      expiryDate: args.expiryDate\n    }),\n    NameUnwrapped: (args) => ({ owner: args.owner.id }),\n    FusesSet: (args) => ({ fuses: args.fuses }),\n    ExpiryExtended: (args) => ({ expiryDate: args.expiryDate })\n  },\n  Registration: {\n    NameRegistered: (args) => ({\n      registrant: args.registrant.id,\n      expiryDate: args.expiryDate\n    }),\n    NameRenewed: (args) => ({ expiryDate: args.expiryDate }),\n    NameTransferred: (args) => ({ owner: args.newOwner.id })\n  },\n  Resolver: {\n    AddrChanged: (args) => ({ addr: args.addr.id }),\n    MulticoinAddrChanged: (args) => {\n      const format = _ensdomains_address_encoder__WEBPACK_IMPORTED_MODULE_0__.formatsByCoinType[parseInt(args.coinType)];\n      if (!format) {\n        return {\n          coinType: args.coinType,\n          rawAddr: args.multiaddr\n        };\n      }\n      if ((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_5__.hexStripZeros)(args.multiaddr) === \"0x\") {\n        return {\n          coinType: args.coinType,\n          coinName: format.name,\n          rawAddr: \"0x\"\n        };\n      }\n      return {\n        coinType: args.coinType,\n        coinName: format.name,\n        addr: format.encoder(Buffer.from(args.multiaddr.slice(2), \"hex\"))\n      };\n    },\n    NameChanged: (args) => ({ name: args.name }),\n    AbiChanged: (args) => ({ contentType: args.contentType }),\n    PubkeyChanged: (args) => ({ x: args.x, y: args.y }),\n    TextChanged: (args) => ({ key: args.key, value: args.value }),\n    ContenthashChanged: (args) => ({\n      hash: (0,_utils_contentHash_mjs__WEBPACK_IMPORTED_MODULE_1__.decodeContenthash)(args.hash)\n    }),\n    InterfaceChanged: (args) => ({\n      interfaceId: args.interfaceID,\n      implementer: args.implementer\n    }),\n    AuthorisationChanged: (args) => ({\n      owner: args.owner,\n      target: args.target,\n      isAuthorized: args.isAuthorized\n    }),\n    VersionChanged: (args) => ({ version: args.version })\n  }\n};\nvar mapEvents = (eventArray, type) => eventArray.map(\n  (event) => ({\n    type: event.__typename,\n    blockNumber: event.blockNumber,\n    transactionHash: event.transactionID,\n    id: event.id,\n    data: eventFormat[type][event.__typename](event)\n  })\n);\nasync function getHistory({ gqlInstance }, name) {\n  const { client } = gqlInstance;\n  const query = gqlInstance.gql`\n      query getHistory($namehash: String!) {\n        domain(id: $namehash) {\n          events {\n            id\n            blockNumber\n            transactionID\n            __typename\n            ...on Transfer {\n              owner {\n                id\n              }\n            }\n            ...on NewOwner {\n              owner {\n                id\n              }\n            }\n            ...on NewResolver {\n              resolver {\n                id\n              }\n            }\n            ...on NewTTL {\n              ttl\n            }\n            ...on WrappedTransfer {\n              owner {\n                id\n              }\n            }\n            ...on NameWrapped {\n              fuses\n              expiryDate\n              owner {\n                id\n              }\n            }\n            ...on NameUnwrapped {\n              owner {\n                id\n              }\n            }\n            ...on FusesSet {\n              fuses\n            }\n            ...on ExpiryExtended {\n              expiryDate\n            }\n          }\n          registration {\n            events {\n              id\n              blockNumber\n              transactionID\n              __typename\n              ...on NameRegistered {\n                registrant {\n                  id\n                }\n                expiryDate\n              }\n              ...on NameRenewed {\n                expiryDate\n              }\n              ...on NameTransferred {\n                newOwner {\n                  id\n                }\n              }\n            }\n          }\n          resolver {\n            events {\n              id\n              blockNumber\n              transactionID\n              __typename\n              ...on AddrChanged {\n                addr {\n                  id\n                }\n              }\n              ...on MulticoinAddrChanged {\n                coinType\n                multiaddr: addr\n              }\n              ...on NameChanged {\n                name\n              }\n              ...on AbiChanged {\n                contentType\n              }\n              ...on PubkeyChanged {\n                x\n                y\n              }\n              ...on TextChanged {\n                key\n                value\n              }\n              ...on ContenthashChanged {\n                hash\n              }\n              ...on InterfaceChanged {\n                interfaceID\n                implementer\n              }\n              ...on AuthorisationChanged {\n                owner\n                target\n                isAuthorized\n              }\n              ...on VersionChanged {\n                version\n              }\n            }\n          }\n        }\n      }\n      `;\n  const nameHash = (0,_utils_normalise_mjs__WEBPACK_IMPORTED_MODULE_3__.namehash)(name);\n  const labels = name.split(\".\");\n  const is2ldEth = (0,_utils_validation_mjs__WEBPACK_IMPORTED_MODULE_4__.checkIsDotEth)(labels);\n  const response = await client.request(query, {\n    namehash: nameHash\n  }).catch((e) => {\n    throw new _utils_errors_mjs__WEBPACK_IMPORTED_MODULE_2__.ENSJSError({\n      errors: (0,_utils_errors_mjs__WEBPACK_IMPORTED_MODULE_2__.getClientErrors)(e)\n    });\n  }).finally(_utils_errors_mjs__WEBPACK_IMPORTED_MODULE_2__.debugSubgraphLatency);\n  const domain = response?.domain;\n  if (!domain)\n    return void 0;\n  const domainEvents = domain.events || [];\n  const resolverEvents = domain.resolver?.events || [];\n  const domainHistory = mapEvents(domainEvents, \"Domain\");\n  const resolverHistory = mapEvents(\n    resolverEvents.filter(\n      (event) => !event.coinType || event.coinType !== \"60\"\n    ),\n    \"Resolver\"\n  );\n  if (is2ldEth) {\n    const registrationEvents = domain.registration?.events || [];\n    const registrationHistory = mapEvents(registrationEvents, \"Registration\");\n    return {\n      domain: domainHistory,\n      registration: registrationHistory,\n      resolver: resolverHistory\n    };\n  }\n  return {\n    domain: domainHistory,\n    resolver: resolverHistory\n  };\n}\n\n\n\n//# sourceURL=webpack://dapp/./node_modules/@ensdomains/ensjs/dist/esm/functions/getHistory.mjs?");

/***/ }),

/***/ "./node_modules/@ensdomains/ensjs/dist/esm/utils/consts.mjs":
/*!******************************************************************!*\
  !*** ./node_modules/@ensdomains/ensjs/dist/esm/utils/consts.mjs ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EMPTY_ADDRESS: () => (/* binding */ EMPTY_ADDRESS),\n/* harmony export */   MAX_DATE_INT: () => (/* binding */ MAX_DATE_INT),\n/* harmony export */   MAX_INT_64: () => (/* binding */ MAX_INT_64),\n/* harmony export */   MINIMUM_DOT_ETH_CHARS: () => (/* binding */ MINIMUM_DOT_ETH_CHARS)\n/* harmony export */ });\n// src/utils/consts.ts\nvar EMPTY_ADDRESS = \"0x0000000000000000000000000000000000000000\";\nvar MAX_INT_64 = BigInt(\"18446744073709551615\");\nvar MAX_DATE_INT = 864e13;\nvar MINIMUM_DOT_ETH_CHARS = 3;\n\n\n\n//# sourceURL=webpack://dapp/./node_modules/@ensdomains/ensjs/dist/esm/utils/consts.mjs?");

/***/ }),

/***/ "./node_modules/@ensdomains/ensjs/dist/esm/utils/validation.mjs":
/*!**********************************************************************!*\
  !*** ./node_modules/@ensdomains/ensjs/dist/esm/utils/validation.mjs ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   checkIsDotEth: () => (/* binding */ checkIsDotEth),\n/* harmony export */   parseInput: () => (/* binding */ parseInput),\n/* harmony export */   validateName: () => (/* binding */ validateName)\n/* harmony export */ });\n/* harmony import */ var _consts_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./consts.mjs */ \"./node_modules/@ensdomains/ensjs/dist/esm/utils/consts.mjs\");\n/* harmony import */ var _labels_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./labels.mjs */ \"./node_modules/@ensdomains/ensjs/dist/esm/utils/labels.mjs\");\n/* harmony import */ var _normalise_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./normalise.mjs */ \"./node_modules/@ensdomains/ensjs/dist/esm/utils/normalise.mjs\");\n// src/utils/validation.ts\n\n\n\nvar validateName = (name) => {\n  const nameArray = name.split(\".\");\n  const normalisedArray = nameArray.map((label) => {\n    if (label.length === 0)\n      throw new Error(\"Name cannot have empty labels\");\n    if (label === \"[root]\") {\n      if (name !== label)\n        throw new Error(\"Root label must be the only label\");\n      return label;\n    }\n    return (0,_labels_mjs__WEBPACK_IMPORTED_MODULE_1__.isEncodedLabelhash)(label) ? (0,_labels_mjs__WEBPACK_IMPORTED_MODULE_1__.checkLabel)(label) || label : (0,_normalise_mjs__WEBPACK_IMPORTED_MODULE_2__.normalise)(label);\n  });\n  const normalisedName = normalisedArray.join(\".\");\n  (0,_labels_mjs__WEBPACK_IMPORTED_MODULE_1__.saveName)(normalisedName);\n  return normalisedName;\n};\nvar parseInput = (input) => {\n  let nameReference = input;\n  let isValid = false;\n  try {\n    nameReference = validateName(input);\n    isValid = true;\n  } catch {\n  }\n  const normalisedName = isValid ? nameReference : void 0;\n  const labels = nameReference.split(\".\");\n  const tld = labels[labels.length - 1];\n  const isETH = tld === \"eth\";\n  const labelDataArray = (0,_normalise_mjs__WEBPACK_IMPORTED_MODULE_2__.split)(nameReference);\n  const isShort = (labelDataArray[0].output?.length || 0) < _consts_mjs__WEBPACK_IMPORTED_MODULE_0__.MINIMUM_DOT_ETH_CHARS;\n  if (labels.length === 1) {\n    return {\n      type: \"label\",\n      normalised: normalisedName,\n      isShort,\n      isValid,\n      is2LD: false,\n      isETH,\n      labelDataArray\n    };\n  }\n  const is2LD = labels.length === 2;\n  return {\n    type: \"name\",\n    normalised: normalisedName,\n    isShort: isETH && is2LD ? isShort : false,\n    isValid,\n    is2LD,\n    isETH,\n    labelDataArray\n  };\n};\nvar checkIsDotEth = (labels) => labels.length === 2 && labels[1] === \"eth\";\n\n\n\n//# sourceURL=webpack://dapp/./node_modules/@ensdomains/ensjs/dist/esm/utils/validation.mjs?");

/***/ })

}]);