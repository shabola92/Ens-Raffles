/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkdapp"] = self["webpackChunkdapp"] || []).push([["setRecords-mjs"],{

/***/ "?ed5d":
/*!************************!*\
  !*** buffer (ignored) ***!
  \************************/
/***/ (() => {

eval("/* (ignored) */\n\n//# sourceURL=webpack://dapp/buffer_(ignored)?");

/***/ }),

/***/ "./node_modules/@ensdomains/ensjs/dist/esm/functions/setRecords.mjs":
/*!**************************************************************************!*\
  !*** ./node_modules/@ensdomains/ensjs/dist/esm/functions/setRecords.mjs ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ setRecords_default)\n/* harmony export */ });\n/* harmony import */ var _utils_normalise_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/normalise.mjs */ \"./node_modules/@ensdomains/ensjs/dist/esm/utils/normalise.mjs\");\n/* harmony import */ var _utils_recordHelpers_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/recordHelpers.mjs */ \"./node_modules/@ensdomains/ensjs/dist/esm/utils/recordHelpers.mjs\");\n// src/functions/setRecords.ts\n\n\nasync function setRecords_default({\n  contracts,\n  provider,\n  getResolver,\n  signer\n}, name, {\n  records,\n  resolverAddress\n}) {\n  if (!name.includes(\".\")) {\n    throw new Error(\"Input is not an ENS name\");\n  }\n  let resolverToUse;\n  if (resolverAddress) {\n    resolverToUse = resolverAddress;\n  } else {\n    resolverToUse = await getResolver(name);\n  }\n  if (!resolverToUse) {\n    throw new Error(\"No resolver found for input address\");\n  }\n  const resolver = (await contracts?.getPublicResolver(provider, resolverToUse))?.connect(signer);\n  const hash = (0,_utils_normalise_mjs__WEBPACK_IMPORTED_MODULE_0__.namehash)(name);\n  const calls = (0,_utils_recordHelpers_mjs__WEBPACK_IMPORTED_MODULE_1__.generateRecordCallArray)(hash, records, resolver);\n  return resolver.populateTransaction.multicall(calls);\n}\n\n\n\n//# sourceURL=webpack://dapp/./node_modules/@ensdomains/ensjs/dist/esm/functions/setRecords.mjs?");

/***/ }),

/***/ "./node_modules/@ensdomains/ensjs/dist/esm/utils/recordHelpers.mjs":
/*!*************************************************************************!*\
  !*** ./node_modules/@ensdomains/ensjs/dist/esm/utils/recordHelpers.mjs ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   generateABIInput: () => (/* binding */ generateABIInput),\n/* harmony export */   generateRecordCallArray: () => (/* binding */ generateRecordCallArray),\n/* harmony export */   generateSetAddr: () => (/* binding */ generateSetAddr),\n/* harmony export */   generateSingleRecordCall: () => (/* binding */ generateSingleRecordCall)\n/* harmony export */ });\n/* harmony import */ var _ensdomains_address_encoder__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ensdomains/address-encoder */ \"./node_modules/@ensdomains/address-encoder/lib/index.module.js\");\n/* harmony import */ var _ethersproject_bytes__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ethersproject/bytes */ \"./node_modules/@ethersproject/bytes/lib.esm/index.js\");\n/* harmony import */ var _ethersproject_strings__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ethersproject/strings */ \"./node_modules/@ethersproject/strings/lib.esm/utf8.js\");\n/* harmony import */ var _contentHash_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./contentHash.mjs */ \"./node_modules/@ensdomains/ensjs/dist/esm/utils/contentHash.mjs\");\n// src/utils/recordHelpers.ts\n\n\n\n\nvar generateSetAddr = (namehash, coinType, address, resolver) => {\n  let coinTypeInstance;\n  if (!Number.isNaN(parseInt(coinType))) {\n    coinTypeInstance = _ensdomains_address_encoder__WEBPACK_IMPORTED_MODULE_0__.formatsByCoinType[parseInt(coinType)];\n  } else {\n    coinTypeInstance = _ensdomains_address_encoder__WEBPACK_IMPORTED_MODULE_0__.formatsByName[coinType.toUpperCase()];\n  }\n  const inputCoinType = coinTypeInstance.coinType;\n  let encodedAddress = address !== \"\" ? coinTypeInstance.decoder(address) : \"0x\";\n  if (inputCoinType === 60 && encodedAddress === \"0x\")\n    encodedAddress = coinTypeInstance.decoder(\n      \"0x0000000000000000000000000000000000000000\"\n    );\n  return resolver?.interface.encodeFunctionData(\n    \"setAddr(bytes32,uint256,bytes)\",\n    [namehash, inputCoinType, encodedAddress]\n  );\n};\nvar generateABIInput = async (encodeAs, data) => {\n  let contentType;\n  let encodedData;\n  switch (encodeAs) {\n    case \"json\":\n      contentType = 1;\n      encodedData = JSON.stringify(data);\n      break;\n    case \"zlib\": {\n      contentType = 2;\n      const { deflate } = await __webpack_require__.e(/*! import() */ \"vendors-node_modules_pako_dist_pako_deflate_min_js\").then(__webpack_require__.t.bind(__webpack_require__, /*! pako/dist/pako_deflate.min.js */ \"./node_modules/pako/dist/pako_deflate.min.js\", 19));\n      encodedData = deflate(JSON.stringify(data));\n      break;\n    }\n    case \"cbor\": {\n      contentType = 4;\n      const { encode } = await Promise.all(/*! import() */[__webpack_require__.e(\"vendors-node_modules_cbor_lib_cbor_js\"), __webpack_require__.e(\"_ed1b-_d17e\")]).then(__webpack_require__.t.bind(__webpack_require__, /*! cbor */ \"./node_modules/cbor/lib/cbor.js\", 19));\n      encodedData = encode(data);\n      break;\n    }\n    default: {\n      contentType = 8;\n      encodedData = data;\n      break;\n    }\n  }\n  return { contentType, data: encodedData };\n};\nfunction generateSingleRecordCall(namehash, resolver, type) {\n  if (type === \"contentHash\") {\n    return (_r) => {\n      const record = _r;\n      let _contentHash = \"\";\n      if (record !== _contentHash) {\n        const encoded = (0,_contentHash_mjs__WEBPACK_IMPORTED_MODULE_1__.encodeContenthash)(record);\n        if (encoded.error)\n          throw new Error(encoded.error);\n        _contentHash = encoded.encoded;\n      } else {\n        _contentHash = \"0x\";\n      }\n      return resolver.interface.encodeFunctionData(\"setContenthash\", [\n        namehash,\n        _contentHash\n      ]);\n    };\n  }\n  if (type === \"abi\") {\n    return (_r) => {\n      const record = _r;\n      const { contentType = 1, data } = record;\n      let encodedData = data;\n      if (!(0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_2__.isBytesLike)(encodedData)) {\n        if (typeof encodedData === \"object\") {\n          encodedData = JSON.stringify(encodedData);\n        }\n        encodedData = (0,_ethersproject_strings__WEBPACK_IMPORTED_MODULE_3__.toUtf8Bytes)(encodedData);\n      }\n      return resolver.interface.encodeFunctionData(\"setABI\", [\n        namehash,\n        contentType,\n        encodedData\n      ]);\n    };\n  }\n  return (_r) => {\n    const record = _r;\n    if (type === \"text\") {\n      return resolver.interface.encodeFunctionData(\"setText\", [\n        namehash,\n        record.key,\n        record.value\n      ]);\n    }\n    return generateSetAddr(namehash, record.key, record.value, resolver);\n  };\n}\nvar generateRecordCallArray = (namehash, records, resolver) => {\n  const calls = [];\n  if (records.clearRecords) {\n    calls.push(\n      resolver.interface.encodeFunctionData(\"clearRecords\", [namehash])\n    );\n  }\n  if (typeof records.contentHash === \"string\") {\n    const data = generateSingleRecordCall(\n      namehash,\n      resolver,\n      \"contentHash\"\n    )(records.contentHash);\n    if (data)\n      calls.push(data);\n  }\n  if (records.abi) {\n    const data = generateSingleRecordCall(\n      namehash,\n      resolver,\n      \"abi\"\n    )(records.abi);\n    if (data)\n      calls.push(data);\n  }\n  if (records.texts && records.texts.length > 0) {\n    records.texts.map(generateSingleRecordCall(namehash, resolver, \"text\")).forEach((call) => calls.push(call));\n  }\n  if (records.coinTypes && records.coinTypes.length > 0) {\n    records.coinTypes.map(generateSingleRecordCall(namehash, resolver, \"addr\")).forEach((call) => calls.push(call));\n  }\n  return calls;\n};\n\n\n\n//# sourceURL=webpack://dapp/./node_modules/@ensdomains/ensjs/dist/esm/utils/recordHelpers.mjs?");

/***/ })

}]);